[tool.poetry]
name = "matts-blog"
version = "1.0.0"
description = "Matt's blog"
authors = ["Matthew Martin <matthewdeanmartin@gmail.com>"]
keywords = ["blog",]
classifiers = [
    "Development Status :: 5 - Production/Stable",
    "Intended Audience :: Developers",
    "License :: OSI Approved :: MIT License",
    "Operating System :: OS Independent",
    "Programming Language :: Python",
    "Programming Language :: Python :: 3.7",
]
include = [
    "content/**/*.*",
    "themes/**/*.*",
    "content/**/*",
    "themes/**/*"
]
exclude = [
]
license = "MIT"
readme = "README.md"
repository = "https://github.com/matthewdeanmartin/blog"
homepage = "https://github.com/matthewdeanmartin/blog"
documentation ="https://github.com/matthewdeanmartin/blog"

[tool.poetry.urls]
"Bug Tracker" = "https://github.com/matthewdeanmartin/blog/issues"
"Change Log" = "https://github.com/matthewdeanmartin/blog/blob/main/CHANGES.md"

[tool.poetry.scripts]


[tool.poetry.dependencies]
# proselint is requiring <4
python = "==3.7.*"
pelican = {extras = ["markdown"], version = ">=4.8.0, <4.9.0"}
# pre-commit = "*"


[tool.poetry.dev-dependencies]

# proselint = "*"
#mdformat = "*"
#linkcheckmd = "*"
# typing_extensions = "*"


[tool.black]
line-length = 120
target-version = ['py39']
include = '\.pyi?$'
exclude = '''

(
  /(
      \.eggs         # exclude a few common directories in the
    | \.git          # root of the project
    | \.hg
    | \.mypy_cache
    | \.tox
    | \.venv
    | _build
    | buck-out
    | build
    | dist
  )/
  | foo.py           # also separately exclude a file named foo.py in
                     # the root of the project
)
'''
[build-system]
requires = ["poetry>=0.12"]
build-backend = "poetry.masonry.api"

[tool.pytest.ini_options]
minversion = "6.0"
testpaths = [
    "tests",
]
junit_family = "xunit1"
norecursedirs = ["vendor", "scripts"]
# don't know how to do this in toml
#addopts = "--strict-markers"
#markers =
#	slow: marks tests as slow (deselect with '-m "not slow"')
#	fast: marks tests as fast (deselect with '-m "not fast"')

[tool.isort]
default_section = "THIRDPARTY"
force_grid_wrap = 0
include_trailing_comma = true
known_first_party = ["blog"]
line_length = 88
multi_line_output = 3
use_parentheses = true

[tool.ruff]
line-length = 1000

# Enable Pyflakes `E` and `F` codes by default.
select = ["E", "F"]
ignore = [
    "E722",
    "E501",
]

# Exclude a variety of commonly ignored directories.
exclude = [
    "dead_code",
    ".bzr",
    ".direnv",
    ".eggs",
    ".git",
    ".hg",
    ".mypy_cache",
    ".nox",
    ".pants.d",
    ".ruff_cache",
    ".svn",
    ".tox",
    ".venv",
    "__pypackages__",
    "_build",
    "buck-out",
    "build",
    "dist",
    "node_modules",
    "venv",
    "hide"
]
per-file-ignores = { }

# Allow unused variables when underscore-prefixed.
dummy-variable-rgx = "^(_+|(_+[a-zA-Z0-9_]*[a-zA-Z0-9]+?))$"

# Assume Python 3.10.
target-version = "py311"

[tool.coverage.report]
# Regexes for lines to exclude from consideration
exclude_also = [
    # Don't complain about missing debug-only code:
    "def __repr__",
    "if self\\.debug",

    # Don't complain if tests don't hit defensive assertion code:
    "raise AssertionError",
    "raise NotImplementedError",

    # Don't complain if non-runnable code isn't run:
    "if 0:",
    "if __name__ == .__main__.:",

    # Don't complain about abstract methods, they aren't run:
    "@(abc\\.)?abstractmethod",
    ]

[[tool.poetry.source]]
name = "pypi-public"
url = "https://pypi.org/simple/"
